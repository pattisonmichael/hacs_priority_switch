{
    "config": {
        "abort": {
            "already_configured": "Device is already configured"
        },
        "error": {
            "cannot_connect": "Failed to connect",
            "control_entity_req": "A valid control entity is required!",
            "control_type_req": "A Control Type is required!",
            "fixed_value_req": "A value is required for a fixed Value Type!",
            "input_name_req": "You need a name for the Input!",
            "invalid_auth": "Invalid authentication",
            "missing_data": "Missing Data!",
            "priority_dup": "You already have this priority for another input! You can reorder them in the main setup later.",
            "priority_req": "You need to have a priority for the input!",
            "required": "Required",
            "template_value_req": "A valid template is required for a Template Value Type!",
            "unknown": "Unexpected error",
            "value_entity_req": "An Entity is required for an Entity Value Type!",
            "value_type_req": "Please choose type of entity!"
        },
        "step": {
            "add": {
                "data": {
                    "auto_off": "Amount of seconds after a control entity is switched off again after it was switched on.",
                    "auto_on": "Amount of seconds after a control entity is switched on again after it was switched off.",
                    "control_entity": "The Entity to control this input. Only required if set Control Type to Entity above.",
                    "control_type": "Control the Input, Can be True/False to set it permanently or point to a boolean entity to have it dynamic.*",
                    "name": "Input Name*",
                    "priority": "Priority of Input (Higher = More Important)*",
                    "value_type": "The type of Input you want to use.*"
                },
                "description": "Here you can define all properties for an input. Not all values are required and some are mutual exclusive!",
                "title": "Input {input_name} Step 1/2"
            },
            "add_input_entity": {
                "data": {
                    "value_entity": "The entity that should be used to get the value from to send."
                },
                "description": "Here you can define the value entity for an input.",
                "title": "Input {input_name} Step 2/2"
            },
            "add_input_fixed": {
                "data": {
                    "value": "The value the Input should send. Use this to send a fixed value."
                },
                "description": "Here you can define the fixed value for an input.",
                "title": "Input {input_name} Step 2/2"
            },
            "add_input_sun": {
                "data": {
                    "auto_shade": "Enable this to activate cover control by sun. You need to fill in all below configuration to use this!",
                    "azimut": "The Azimut when the cover will be in sun",
                    "buildingDeviation": "The deviation of the building (you can think of it like which side of the building)",
                    "elevation": "The Elevation when the cover will be in sun",
                    "elevation_10to20": "Position to send when in elevation between 10 and 20 (0)",
                    "elevation_20to30": "Position to send when in elevation between 20 and 30 (0)",
                    "elevation_30to40": "Position to send when in elevation between 30 and 40 (0)",
                    "elevation_40to50": "Position to send when in elevation between 40 and 50 (0)",
                    "elevation_50to60": "Position to send when in elevation between 50 and 60 (0)",
                    "elevation_gt60": "Position to send when in elevation > 60 (0)",
                    "elevation_lt10": "Position to send when elevation < 10 (0)",
                    "offset_entry": "An offset for when we conside the need to have shadow (-90 to 0) and the sun is entering the window.",
                    "offset_exit": "An offset for when we conside the need to have shadow (0 to 90) and the sun is leaving the window.",
                    "setIfInShadow": "Inverts the function, only triggers if we consider the window to be in the shadow",
                    "shadow": "Position to send when in Shadow (0)",
                    "sun_entity": "The entity we use to track the sun. Usually sun.sun",
                    "updateInterval": "How often should we recalculate in minutes. Have this too small will make the cover move constantly!"
                },
                "description": "Here you can define the settings for an input that is tracking the sun.",
                "title": "Input {input_name} Step 2/2"
            },
            "add_input_template": {
                "data": {
                    "value_template": "The value template that should be used to get the value from to send."
                },
                "description": "Here you can define the template for an input.",
                "title": "Input {input_name} Step 2/2"
            },
            "advanced": {
                "data": {
                    "automation_pause": "Automation Pause",
                    "deadtime": "Deadtime",
                    "detect_manual": "Detect Manual",
                    "enabled": "Enabled",
                    "initial_run": "Initial Run",
                    "output": "Output Name",
                    "output_sequence": "Output Sequence",
                    "status_entity": "Status Entity",
                    "status_entity_icon": "Status Entity Icon",
                    "switch_name": "Switch Name"
                },
                "description": "You need to fill in all field. For advanced options you can choose Advanced Setup from the main menu.",
                "title": "Basic Setup"
            },
            "menu": {
                "data": {
                    "enabled": "Enabled",
                    "switch_name": "Switch Name"
                },
                "description": "Here you can setup a switch and all the required inputs for it.",
                "title": "Add switch"
            },
            "user": {
                "data": {
                    "automation_pause": "Automation Pause",
                    "deadtime": "Deadtime",
                    "debug": "Debug",
                    "detect_manual": "Detect Manual",
                    "enabled": "Enabled",
                    "host": "Host",
                    "initial_run": "Initial Run",
                    "mainmenu": "Main Menu",
                    "output": "Output Name",
                    "output_sequence": "Output Sequence",
                    "password": "Password",
                    "status_entity": "Status Entity",
                    "switch_name": "Switch Name",
                    "username": "Username"
                },
                "description": "Choose how to setup the switch.",
                "title": "Main Menu"
            }
        }
    },
    "selector": {
        "mainmenu": {
            "options": {
                "add": "Add Input",
                "advanced": "Advance Setup",
                "basic": "Basic Setup",
                "del": "Delete Input",
                "input_1": "Edit Input 1: ",
                "input_10": "Edit Input 10: ",
                "input_11": "Edit Input 11: ",
                "input_12": "Edit Input 12: ",
                "input_13": "Edit Input 13: ",
                "input_14": "Edit Input 14: ",
                "input_15": "Edit Input 15: ",
                "input_16": "Edit Input 16: ",
                "input_17": "Edit Input 17: ",
                "input_18": "Edit Input 18: ",
                "input_19": "Edit Input 19: ",
                "input_2": "Edit Input 2: ",
                "input_20": "Edit Input 20: ",
                "input_3": "Edit Input 3: ",
                "input_4": "Edit Input 4: ",
                "input_5": "Edit Input 5: ",
                "input_6": "Edit Input 6: ",
                "input_7": "Edit Input 7: ",
                "input_8": "Edit Input 8: ",
                "input_9": "Edit Input 9: ",
                "reorder": "Reorder Inputs",
                "save": "Save"
            }
        },
        "mainmenubak": {
            "options": {
                "add": "Add Input",
                "advanced": "Advance Setup",
                "basic": "Basic Setup",
                "del": "Delete Input",
                "input1": "Edit Input 1: {input_name1}",
                "input10": "Edit Input 10: {input_name10}",
                "input11": "Edit Input 11: {input_name11}",
                "input12": "Edit Input 12: {input_name12}",
                "input13": "Edit Input 13: {input_name13}",
                "input14": "Edit Input 14: {input_name14}",
                "input15": "Edit Input 15: {input_name15}",
                "input16": "Edit Input 16: {input_name16}",
                "input17": "Edit Input 17: {input_name17}",
                "input18": "Edit Input 18: {input_name18}",
                "input19": "Edit Input 19: {input_name19}",
                "input2": "Edit Input 2: {input_name2}",
                "input20": "Edit Input 20: {input_name20}",
                "input3": "Edit Input 3: {input_name3}",
                "input4": "Edit Input 4: {input_name4}",
                "input5": "Edit Input 5: {input_name5}",
                "input6": "Edit Input 6: {input_name6}",
                "input7": "Edit Input 7: {input_name7}",
                "input8": "Edit Input 8: {input_name8}",
                "input9": "Edit Input 9: {input_name9}",
                "reorder": "Reorder Inputs",
                "save": "Save"
            }
        },
        "menu": {
            "options": {
                "back": "Previous Menu"
            }
        }
    }
}